"This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: apg, cvo; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of students who have no friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many employees are there? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the owner id, first name and last name of the owner who has the most dogs. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: city, sqlite_sequence, country, countrylanguage. \nTable 1 is city, and its column names and types are: ID (Type is number), Name (Type is text), CountryCode (Type is text), District (Type is text), Population (Type is number). \nTable 2 is sqlite_sequence, and its column names and types are: name (Type is text), seq (Type is text). \nTable 3 is country, and its column names and types are: Code (Type is text), Name (Type is text), Continent (Type is text), Region (Type is text), SurfaceArea (Type is number), IndepYear (Type is number), Population (Type is number), LifeExpectancy (Type is number), GNP (Type is number), GNPOld (Type is number), LocalName (Type is text), GovernmentForm (Type is text), HeadOfState (Type is text), Capital (Type is number), Code2 (Type is text). \nTable 4 is countrylanguage, and its column names and types are: CountryCode (Type is text), Language (Type is text), IsOfficial (Type is text), Percentage (Type is number). \nThe primary keys are: ID from Table city, Code from Table country, CountryCode from Table countrylanguage.\nThe foreign keys are: CountryCode from Table city is equivalent to Code from Table country, CountryCode from Table countrylanguage is equivalent to Code from Table country. Use foreign keys to join Tables. Columns with relevant values: Table country Column Code2 have values: in, do; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How much surface area do the countires in the Carribean cover together? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: TV_Channel, TV_series, Cartoon. \nTable 1 is TV_Channel, and its column names and types are: id (Type is text), series_name (Type is text), Country (Type is text), Language (Type is text), Content (Type is text), Pixel_aspect_ratio_PAR (Type is text), Hight_definition_TV (Type is text), Pay_per_view_PPV (Type is text), Package_Option (Type is text). \nTable 2 is TV_series, and its column names and types are: id (Type is number), Episode (Type is text), Air_Date (Type is text), Rating (Type is text), Share (Type is number), 18_49_Rating_Share (Type is text), Viewers_m (Type is text), Weekly_Rank (Type is number), Channel (Type is text). \nTable 3 is Cartoon, and its column names and types are: id (Type is number), Title (Type is text), Directed_by (Type is text), Written_by (Type is text), Original_air_date (Type is text), Production_code (Type is number), Channel (Type is text). \nThe primary keys are: id from Table TV_Channel, id from Table TV_series, id from Table Cartoon.\nThe foreign keys are: Channel from Table TV_series is equivalent to id from Table TV_Channel, Channel from Table Cartoon is equivalent to id from Table TV_Channel. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the name and directors of all the cartoons that are ordered by air date? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the model of the car whose weight is below the average weight. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Count the number of dogs of an age below the average. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the average weight and year for each year? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Student, Has_Pet, Pets. \nTable 1 is Student, and its column names and types are: StuID (Type is number), LName (Type is text), Fname (Type is text), Age (Type is number), Sex (Type is text), Major (Type is number), Advisor (Type is number), city_code (Type is text). \nTable 2 is Has_Pet, and its column names and types are: StuID (Type is number), PetID (Type is number). \nTable 3 is Pets, and its column names and types are: PetID (Type is number), PetType (Type is text), pet_age (Type is number), weight (Type is number). \nThe primary keys are: StuID from Table Student, PetID from Table Pets.\nThe foreign keys are: StuID from Table Has_Pet is equivalent to StuID from Table Student, PetID from Table Has_Pet is equivalent to PetID from Table Pets. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the average weight for each pet type. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 11 tables. Their titles are: Addresses, Courses, Departments, Degree_Programs, Sections, Semesters, Students, Student_Enrolment, Student_Enrolment_Courses, Transcripts, Transcript_Contents. \nTable 1 is Addresses, and its column names and types are: address_id (Type is number), line_1 (Type is text), line_2 (Type is text), line_3 (Type is text), city (Type is text), zip_postcode (Type is text), state_province_county (Type is text), country (Type is text), other_address_details (Type is text). \nTable 2 is Courses, and its column names and types are: course_id (Type is number), course_name (Type is text), course_description (Type is text), other_details (Type is text). \nTable 3 is Departments, and its column names and types are: department_id (Type is number), department_name (Type is text), department_description (Type is text), other_details (Type is text). \nTable 4 is Degree_Programs, and its column names and types are: degree_program_id (Type is number), department_id (Type is number), degree_summary_name (Type is text), degree_summary_description (Type is text), other_details (Type is text). \nTable 5 is Sections, and its column names and types are: section_id (Type is number), course_id (Type is number), section_name (Type is text), section_description (Type is text), other_details (Type is text). \nTable 6 is Semesters, and its column names and types are: semester_id (Type is number), semester_name (Type is text), semester_description (Type is text), other_details (Type is text). \nTable 7 is Students, and its column names and types are: student_id (Type is number), current_address_id (Type is number), permanent_address_id (Type is number), first_name (Type is text), middle_name (Type is text), last_name (Type is text), cell_mobile_number (Type is text), email_address (Type is text), ssn (Type is text), date_first_registered (Type is time), date_left (Type is time), other_student_details (Type is text). \nTable 8 is Student_Enrolment, and its column names and types are: student_enrolment_id (Type is number), degree_program_id (Type is number), semester_id (Type is number), student_id (Type is number), other_details (Type is text). \nTable 9 is Student_Enrolment_Courses, and its column names and types are: student_course_id (Type is number), course_id (Type is number), student_enrolment_id (Type is number). \nTable 10 is Transcripts, and its column names and types are: transcript_id (Type is number), transcript_date (Type is time), other_details (Type is text). \nTable 11 is Transcript_Contents, and its column names and types are: student_course_id (Type is number), transcript_id (Type is number). \nThe primary keys are: address_id from Table Addresses, course_id from Table Courses, department_id from Table Departments, degree_program_id from Table Degree_Programs, section_id from Table Sections, semester_id from Table Semesters, student_id from Table Students, student_enrolment_id from Table Student_Enrolment, student_course_id from Table Student_Enrolment_Courses, transcript_id from Table Transcripts.\nThe foreign keys are: department_id from Table Degree_Programs is equivalent to department_id from Table Departments, course_id from Table Sections is equivalent to course_id from Table Courses, permanent_address_id from Table Students is equivalent to address_id from Table Addresses, current_address_id from Table Students is equivalent to address_id from Table Addresses, student_id from Table Student_Enrolment is equivalent to student_id from Table Students, semester_id from Table Student_Enrolment is equivalent to semester_id from Table Semesters, degree_program_id from Table Student_Enrolment is equivalent to degree_program_id from Table Degree_Programs, student_enrolment_id from Table Student_Enrolment_Courses is equivalent to student_enrolment_id from Table Student_Enrolment, course_id from Table Student_Enrolment_Courses is equivalent to course_id from Table Courses, transcript_id from Table Transcript_Contents is equivalent to transcript_id from Table Transcripts, student_course_id from Table Transcript_Contents is equivalent to student_course_id from Table Student_Enrolment_Courses. Use foreign keys to join Tables. Columns with relevant values: Table Departments Column department_description have values: in; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the different template type codes, and how many documents use each type? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: course, teacher, course_arrange. \nTable 1 is course, and its column names and types are: Course_ID (Type is number), Staring_Date (Type is text), Course (Type is text). \nTable 2 is teacher, and its column names and types are: Teacher_ID (Type is number), Name (Type is text), Age (Type is text), Hometown (Type is text). \nTable 3 is course_arrange, and its column names and types are: Course_ID (Type is number), Teacher_ID (Type is number), Grade (Type is number). \nThe primary keys are: Course_ID from Table course, Teacher_ID from Table teacher, Course_ID from Table course_arrange.\nThe foreign keys are: Teacher_ID from Table course_arrange is equivalent to Teacher_ID from Table teacher, Course_ID from Table course_arrange is equivalent to Course_ID from Table course. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Show names of teachers that teach at least two courses. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the template type code for template type description \"Book\". The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: cvo, apg; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: apg, cvo; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: cvo, apg; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airlines Column Airline have values: United Airlines; Table airports Column AirportCode have values: AHD; Table flights Column SourceAirport have values: AHD; Table flights Column DestAirport have values: AHD; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: How many 'United Airlines' flights depart from Airport 'AHD'? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 6 tables. Their titles are: continents, countries, car_makers, model_list, car_names, cars_data. \nTable 1 is continents, and its column names and types are: ContId (Type is number), Continent (Type is text). \nTable 2 is countries, and its column names and types are: CountryId (Type is number), CountryName (Type is text), Continent (Type is number). \nTable 3 is car_makers, and its column names and types are: Id (Type is number), Maker (Type is text), FullName (Type is text), Country (Type is text). \nTable 4 is model_list, and its column names and types are: ModelId (Type is number), Maker (Type is number), Model (Type is text). \nTable 5 is car_names, and its column names and types are: MakeId (Type is number), Model (Type is text), Make (Type is text). \nTable 6 is cars_data, and its column names and types are: Id (Type is number), MPG (Type is text), Cylinders (Type is number), Edispl (Type is number), Horsepower (Type is text), Weight (Type is number), Accelerate (Type is number), Year (Type is number). \nThe primary keys are: ContId from Table continents, CountryId from Table countries, Id from Table car_makers, ModelId from Table model_list, MakeId from Table car_names, Id from Table cars_data.\nThe foreign keys are: Continent from Table countries is equivalent to ContId from Table continents, Country from Table car_makers is equivalent to CountryId from Table countries, Maker from Table model_list is equivalent to Id from Table car_makers, Model from Table car_names is equivalent to Model from Table model_list, Id from Table cars_data is equivalent to MakeId from Table car_names. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Highschooler, Friend, Likes. \nTable 1 is Highschooler, and its column names and types are: ID (Type is number), name (Type is text), grade (Type is number). \nTable 2 is Friend, and its column names and types are: student_id (Type is number), friend_id (Type is number). \nTable 3 is Likes, and its column names and types are: student_id (Type is number), liked_id (Type is number). \nThe primary keys are: ID from Table Highschooler, student_id from Table Friend, student_id from Table Likes.\nThe foreign keys are: friend_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Friend is equivalent to ID from Table Highschooler, student_id from Table Likes is equivalent to ID from Table Highschooler, liked_id from Table Likes is equivalent to ID from Table Highschooler. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 8 tables. Their titles are: Breeds, Charges, Sizes, Treatment_Types, Owners, Dogs, Professionals, Treatments. \nTable 1 is Breeds, and its column names and types are: breed_code (Type is text), breed_name (Type is text). \nTable 2 is Charges, and its column names and types are: charge_id (Type is number), charge_type (Type is text), charge_amount (Type is number). \nTable 3 is Sizes, and its column names and types are: size_code (Type is text), size_description (Type is text). \nTable 4 is Treatment_Types, and its column names and types are: treatment_type_code (Type is text), treatment_type_description (Type is text). \nTable 5 is Owners, and its column names and types are: owner_id (Type is number), first_name (Type is text), last_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 6 is Dogs, and its column names and types are: dog_id (Type is number), owner_id (Type is number), abandoned_yn (Type is text), breed_code (Type is text), size_code (Type is text), name (Type is text), age (Type is text), date_of_birth (Type is time), gender (Type is text), weight (Type is text), date_arrived (Type is time), date_adopted (Type is time), date_departed (Type is time). \nTable 7 is Professionals, and its column names and types are: professional_id (Type is number), role_code (Type is text), first_name (Type is text), street (Type is text), city (Type is text), state (Type is text), zip_code (Type is text), last_name (Type is text), email_address (Type is text), home_phone (Type is text), cell_number (Type is text). \nTable 8 is Treatments, and its column names and types are: treatment_id (Type is number), dog_id (Type is number), professional_id (Type is number), treatment_type_code (Type is text), date_of_treatment (Type is time), cost_of_treatment (Type is number). \nThe primary keys are: breed_code from Table Breeds, charge_id from Table Charges, size_code from Table Sizes, treatment_type_code from Table Treatment_Types, owner_id from Table Owners, dog_id from Table Dogs, professional_id from Table Professionals, treatment_id from Table Treatments.\nThe foreign keys are: owner_id from Table Dogs is equivalent to owner_id from Table Owners, owner_id from Table Dogs is equivalent to owner_id from Table Owners, size_code from Table Dogs is equivalent to size_code from Table Sizes, breed_code from Table Dogs is equivalent to breed_code from Table Breeds, dog_id from Table Treatments is equivalent to dog_id from Table Dogs, professional_id from Table Treatments is equivalent to professional_id from Table Professionals, treatment_type_code from Table Treatments is equivalent to treatment_type_code from Table Treatment_Types. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: List the cost of each treatment and the corresponding treatment type description. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: Ref_Template_Types, Templates, Documents, Paragraphs. \nTable 1 is Ref_Template_Types, and its column names and types are: Template_Type_Code (Type is text), Template_Type_Description (Type is text). \nTable 2 is Templates, and its column names and types are: Template_ID (Type is number), Version_Number (Type is number), Template_Type_Code (Type is text), Date_Effective_From (Type is time), Date_Effective_To (Type is time), Template_Details (Type is text). \nTable 3 is Documents, and its column names and types are: Document_ID (Type is number), Template_ID (Type is number), Document_Name (Type is text), Document_Description (Type is text), Other_Details (Type is text). \nTable 4 is Paragraphs, and its column names and types are: Paragraph_ID (Type is number), Document_ID (Type is number), Paragraph_Text (Type is text), Other_Details (Type is text). \nThe primary keys are: Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Templates, Document_ID from Table Documents, Paragraph_ID from Table Paragraphs.\nThe foreign keys are: Template_Type_Code from Table Templates is equivalent to Template_Type_Code from Table Ref_Template_Types, Template_ID from Table Documents is equivalent to Template_ID from Table Templates, Document_ID from Table Paragraphs is equivalent to Document_ID from Table Documents. Use foreign keys to join Tables. Columns with relevant values: Table Documents Column Document_Name have values: Data base; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Return the template type code of the template that is used by a document named Data base. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: Table airports Column AirportCode have values: APG, CVO; Table flights Column SourceAirport have values: APG, CVO; Table flights Column DestAirport have values: APG, CVO; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Which airlines have departures from CVO but not from APG airports? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 4 tables. Their titles are: employee, shop, hiring, evaluation. \nTable 1 is employee, and its column names and types are: Employee_ID (Type is number), Name (Type is text), Age (Type is number), City (Type is text). \nTable 2 is shop, and its column names and types are: Shop_ID (Type is number), Name (Type is text), Location (Type is text), District (Type is text), Number_products (Type is number), Manager_name (Type is text). \nTable 3 is hiring, and its column names and types are: Shop_ID (Type is number), Employee_ID (Type is number), Start_from (Type is text), Is_full_time (Type is others). \nTable 4 is evaluation, and its column names and types are: Employee_ID (Type is text), Year_awarded (Type is text), Bonus (Type is number). \nThe primary keys are: Employee_ID from Table employee, Shop_ID from Table shop, Employee_ID from Table hiring, Employee_ID from Table evaluation.\nThe foreign keys are: Employee_ID from Table hiring is equivalent to Employee_ID from Table employee, Shop_ID from Table hiring is equivalent to Shop_ID from Table shop, Employee_ID from Table evaluation is equivalent to Employee_ID from Table employee. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: Find the names of employees who never won any award in the evaluation. The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: airlines, airports, flights. \nTable 1 is airlines, and its column names and types are: uid (Type is number), Airline (Type is text), Abbreviation (Type is text), Country (Type is text). \nTable 2 is airports, and its column names and types are: City (Type is text), AirportCode (Type is text), AirportName (Type is text), Country (Type is text), CountryAbbrev (Type is text). \nTable 3 is flights, and its column names and types are: Airline (Type is number), FlightNo (Type is number), SourceAirport (Type is text), DestAirport (Type is text). \nThe primary keys are: uid from Table airlines, AirportCode from Table airports, Airline from Table flights.\nThe foreign keys are: DestAirport from Table flights is equivalent to AirportCode from Table airports, SourceAirport from Table flights is equivalent to AirportCode from Table airports. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the code of airport that has the highest number of flights? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Student, Has_Pet, Pets. \nTable 1 is Student, and its column names and types are: StuID (Type is number), LName (Type is text), Fname (Type is text), Age (Type is number), Sex (Type is text), Major (Type is number), Advisor (Type is number), city_code (Type is text). \nTable 2 is Has_Pet, and its column names and types are: StuID (Type is number), PetID (Type is number). \nTable 3 is Pets, and its column names and types are: PetID (Type is number), PetType (Type is text), pet_age (Type is number), weight (Type is number). \nThe primary keys are: StuID from Table Student, PetID from Table Pets.\nThe foreign keys are: StuID from Table Has_Pet is equivalent to StuID from Table Student, PetID from Table Has_Pet is equivalent to PetID from Table Pets. Use foreign keys to join Tables. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the average age for all students who do not own any pets ? The corresponding SQL is:""This is a task converting text into SQL statement.\nWe will first give the dataset schema and then ask a question in text.\nYou are asked to generate an SQL statement.\nHere is the test question to be answered: Let us take a question and turn it into a SQL statement about database tables. There are 3 tables. Their titles are: Student, Has_Pet, Pets. \nTable 1 is Student, and its column names and types are: StuID (Type is number), LName (Type is text), Fname (Type is text), Age (Type is number), Sex (Type is text), Major (Type is number), Advisor (Type is number), city_code (Type is text). \nTable 2 is Has_Pet, and its column names and types are: StuID (Type is number), PetID (Type is number). \nTable 3 is Pets, and its column names and types are: PetID (Type is number), PetType (Type is text), pet_age (Type is number), weight (Type is number). \nThe primary keys are: StuID from Table Student, PetID from Table Pets.\nThe foreign keys are: StuID from Table Has_Pet is equivalent to StuID from Table Student, PetID from Table Has_Pet is equivalent to PetID from Table Pets. Use foreign keys to join Tables. Columns with relevant values: ; Only use columns with relevant values to generate SQL. \nLet us take a text question and turn it into a SQL statement about database tables. The question is: What is the average age for all students who do not own any pets ? The corresponding SQL is:"