{"MixPrompt - What is the average age for all students who do not own any pets ?": {"db_id": "pets_1", "question": "What is the average age for all students who do not own any pets ?", "query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "qpl": "#1 = Scan Table [ Student ] Output [ Age , StuID ] ; #2 = Scan Table [ Has_Pet ] Output [ StuID ] ; #3 = Except [ #1 , #2 ] Predicate [ #2.StuID IS NULL OR #1.StuID = #2.StuID ] Output [ #1.Age ] ; #4 = Aggregate [ #3 ] Output [ AVG(Age) AS Avg_Age ]", "gpt_results": [{"type": "concise", "query": "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": true}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": true}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": false, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) AS AverageAge\nFROM Student\nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) AS average_age\nFROM Student\nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": false, "with_types": true}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": false}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": false}, {"type": "concise", "query": "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": true}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": true}, {"type": "concise", "query": "SELECT AVG(age) \nFROM student \nWHERE stuid NOT IN (SELECT stuid FROM has_pet)", "with_values": true, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": true}, {"type": "verbose", "query": "SELECT AVG(Age) \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)", "with_values": true, "with_types": true}]}}